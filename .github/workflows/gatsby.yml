name: Deploy Gatsby site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:
  schedule:
    - cron: "*/15 * * * *" # cada 15 minutos

permissions:
  contents: write   
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true  
          fetch-depth: 0             

      # ─────────────── Fetch Markdown desde API ───────────────
      - name: Fetch and decode Markdown from API
        id: fetch
        env:
          API_URL: https://5xt0w80d-8000.usw3.devtunnels.ms/api/v1/get-blog
          BLOG_PATH: content/blog
        run: |
          echo "Fetching markdown from API..."
          RESPONSE=$(curl -s $API_URL)
          
          FOLDER=$(echo "$RESPONSE" | jq -r '.folder_name')
          MARKDOWN_B64=$(echo "$RESPONSE" | jq -r '.markdown_base64')
          
          echo "folder_name=$FOLDER" >> $GITHUB_ENV
          
          mkdir -p "$BLOG_PATH/$FOLDER"
          echo "$MARKDOWN_B64" | base64 --decode > "$BLOG_PATH/$FOLDER/index.md"
          echo "Saved decoded post in $BLOG_PATH/$FOLDER/index.md"
      # ─────────────── Fin Fetch Markdown ───────────────

      - name: Commit new markdown
        run: |
          git config user.name "emmanuel Bot"
          git config user.email "emmanuel.lopez@meltsan.com"
          git add content/blog
          git commit -m "add: ${{ env.folder_name }}" || echo "No changes to commit"
          git push origin main
      # ────────────────────────────────────────────────

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: gatsby

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ hashFiles('public') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Gatsby
        env:
          PREFIX_PATHS: 'true'
        run: ${{ steps.detect-package-manager.outputs.manager }} run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
